###################################
THINGS TO DO:
	- Connect foreground extraction to system
	- Connect Vision API to system
	- Test effective distances for cameras and resolutions
	- Make PlantUML styled diagram

###################################
THINGS TO RESEARCH:
	- Google Vision API alternatives
	- types of SLAM {WHAT IS SLAM CALLED WHEN THE CAMERA IS NOT ON THE ROBOT?} (SLAM is 'simultanious', not 'self')
	- types of bge
	- look into how existing surveillance systems deal with their cameras
	- look into costs of light battery packs for robot and cableless chargers

###################################

Part ~: 
	Title Page
	Acknowledgements
	Abstract


Part A: Introduction and Background
	Chapter 1: Introduction to Domain
	Chapter 2: Background Domain Research


Part B: Methodology Setup	 
	Chapter 3: Project Management
#		What SE Methodology is most appropriate for context?
			What context is being used?
				The topic is robot picking up litter...
				The abstract sense is an autonomous robot responding to entities.
			How critical would a system like this be?
				Due to the nature of its implementation, it could be moving around an environment with people or animals around it. Thus it could cause cause some harm to them, or it could pick up items which are not litter causing distress for those around it. However as its failure to operate would not cause any serious damage, it would be classed as a non-critical system.
			As a non-critical system, it would not require as stringent a design methodology, allowing for some variation in design as the system is designed and built.


			Why - linking to context?

		Use of gantt chart? (Kanban/SCRUMBoard?)
			-For time management
			-Setting weekly objectives
			-Based on priority
			-Revised gantt chart half way through project to factor in new risks and issues with timings


	Chapter 4: Software Development Life Cycle
		How ensure all aims are met?
		Ensure system is fit for evaluation?
			-using hybrid of agile, where components are built off of each other
		Use of Pipeline development
			[GET DEREK TO CHOOSE BEST OUT OF PLANT UML, ROS GRAPH AND PIPELINE DESIGN]
		


	Chapter 5: Methodology Planning
		System 1: Wireless Surveillance System and File Transfer

			Step 1: Research tools and methods to set up the system
				---------------------------------------------------
				first looked into benefits of wired and wireless
				then i researched into how to implement a wireless system
				found information on ftp and how that can be set up with a local computer
				found that a raspberry pi 3 could perform well and be low cost
				found that an arduino uno could perform the operations neccessary
				found that a raspberry pi zero w could be used as a much cheaper alternative
				if pi could be used, pi camera and uv pi camera could be employed
				
			Step 2: Define requirements for the system
				---------------------------------------------------
				images must be accessible 
				it must be cheap to install
				parts must be cheap
				must have low latency and high response
				camera must be high quality enough to identify smaller objects within the image
				
			Step 3: Define appropriate evaluation systems
				---------------------------------------------------
				the metrics for testing will be cost and response time
				
			Step 4: Design the system using the best method
			Step 5: Test effectiveness of systems researched in context
			Step 6: Build the most appropriate
			Step 7: Evaluate the efficacy of the system
				+ comparison with Step 1-2
				
				

		System 2: Background and Foreground Extraction
			Step 1: Research tools and methods to set up the system
				---------------------------------------------------
				first looked into how to extract objects from an image
				found that single image object extraction is not very reliable
				found that stacking images could create a background
				background subtraction could be performed on the stack images
				found there are multiple ways to do background stacking
				found mean, which is performing mean operation over the 4th dimension
				found median, which is performing median operation over the 4th dimension
				found mode, which is performing mode operation over the 4th dimension
				found blur detection
				found fancy methods...
				found out about backgroud updating? (cant remember what it is called)
				found out about fancy clustering...
				---------------------------------------------------
				matlab chosen for this as it is high level and testing can be done quickly.
				this system is simply a proof of concept, for release is would use python, a much cheaper alternative.

			Step 2: Define requirements for the system
				---------------------------------------------------
				system must be able to factor in lighting changes (weather, day/night)
				backgroud must be generated at a faster speed then images are taken
				
				
			Step 3: Define appropriate evaluation systems
				---------------------------------------------------
				the metrics for this system will be time and accuracy
				
			Step 4: Design the system using the best method
			Step 5: Test effectiveness of systems researched in context
			Step 6: Build the most appropriate
			Step 7: Evaluate the efficacy of the system
				+ comparison with Step 1-2


		System 3: Object Identification and Litter Filter
			Step 1: Research tools and methods to set up the system
				---------------------------------------------------
				Began research into ML basic classification against supervised models for things like bottles, cans and balls of paper
				Began research into using prebuilt detection APIs
				Researched into Google Vision API
				Researched into Amazon Vision API
				Researched into Azure Vision API
				Using an API meant any language could be used
				---------------------------------------------------
				Developing own models, choice was between python and matlab... why only these 2?
				python has these benefits over matlab...
				matlab has these benefits over python...
				
			Step 2: Define requirements for the system
				---------------------------------------------------
				system must be able to give an confidence output for the classification is gives
				misclassifications must be low
				the system must be fast
				
			Step 3: Define appropriate evaluation systems
				---------------------------------------------------
				the metrics will be accuracy and speed
				additional metrics will be cost per transaction if APIs are used
				additional evaluation parameters will exist against cost if an internet service is required
				
			Step 4: Design the system using the best method
			Step 5: Test effectiveness of systems researched in context
			Step 6: Build the most appropriate
			Step 7: Evaluate the efficacy of the system
				+ comparison with Step 1-2



		System 4: Localisation Implementation
			Step 1: Research tools and methods to set up the system
				---------------------------------------------------
				SLAM was planned during initial conception
				When camera was chosen to work independently of the robot SLAM was abandoned
				
				
				
				
			Step 2: Define requirements for the system
				---------------------------------------------------
				
				
			Step 3: Define appropriate evaluation systems
				---------------------------------------------------
				
				
			Step 4: Design the system using the best method
			Step 5: Test effectiveness of systems researched in context
			Step 6: Build the most appropriate
			Step 7: Evaluate the efficacy of the system
				+ comparison with Step 1-2

		System 5: Robot Development/Build
			Step 1: Research tools and methods to set up the system
				---------------------------------------------------
				the initial idea was to build a robot off of a cheap £12 toy RC car running a £30 rpi3b+
					this plan was stopped due to inexperience with elecronics
				system redesigned to remove the requirement of a camera on the robot, thus making it cheaper
				full kit alternatives were researched but found to cost much more even by the cheapest
				research was done into finding a motor driver for the rpi3b+ and the motoZero was found for £10
				system redesigned to remove the need for heavy processing on the onboard computer
				more research was done to reduce the costs, and the rpi0 was found to cost much less at £7
#				research done in looking for light weight power banks
#				research done in looking for wireless charging cables
				...
			Step 2: Define requirements for the system
				---------------------------------------------------
				The system must be cheap, if the system is to be outside, there is a high chance of damage, thus costs should be minimized	
				Maintanence costs should be limited also, with the system being designed to be as simple a system as possible
				
			Step 3: Define appropriate evaluation systems
				---------------------------------------------------
#				the system will be evaluated by measuring the time it is able to be active for, and other stuff...
				
			Step 4: Design the system using the best method
			Step 5: Test effectiveness of systems researched in context
			Step 6: Build the most appropriate
			Step 7: Evaluate the efficacy of the system
				+ comparison with Step 1-2

		System 6: Robot Communiation & Movement Systems		
			Step 1: Research tools and methods to set up the system
				---------------------------------------------------
				ssh commands?
				what could go wrong with them?
				ftp commands?
				what issues are there with a system like this?
				
			Step 2: Define requirements for the system
				---------------------------------------------------
				
				
			Step 3: Define appropriate evaluation systems
				---------------------------------------------------
				
				
			Step 4: Design the system using the best method
			Step 5: Test effectiveness of systems researched in context
			Step 6: Build the most appropriate
			Step 7: Evaluate the efficacy of the system
				+ comparison with Step 1-2


Part D: Conclusion
	Chapter 6: Does the project Achieve the Aim
	Chapter 7: Overall Evaluation through Metrics
	Chpater 8: Changes to the Development

Part E: Reflective Analysis
	Chapter 9: WWW & EBI
	Chapter 10: Further Research / Research Limitations

Part F: References



	